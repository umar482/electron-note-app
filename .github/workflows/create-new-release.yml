name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Electron app
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node-version: [14.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run make

      - name: Archive Electron app
        uses: actions/upload-artifact@v2
        with:
          name: my-electron-app
          path: dist/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release v${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download Electron apps
        uses: actions/download-artifact@v2
        with:
          name: my-electron-app
          path: dist

      - name: Upload Electron apps to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ${{ github.workspace }}/dist/*
          asset_name: my-electron-app-${{ matrix.os }}
          asset_content_type: application/zip
          release_id: ${{ steps.create_release.outputs.release_id }}
