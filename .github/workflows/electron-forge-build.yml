name: Electron Forge Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        platform: [darwin, linux, win32]
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run make

      - name: Package app
        run: npm run package -- --platform=${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}-app
          path: out/make
          
      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run make

      - name: Package app
        run: npm run package -- --platform=${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}-app
          path: out/make

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.ELECTRON_NOTE_GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            This is an automatically generated release for build ${{ github.run_number }}.
          draft: false
          prerelease: false

      - name: Upload Release Assets
        id: upload-release-assets
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.ELECTRON_NOTE_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.upload-artifact.outputs.artifact_path }}
          asset_name: ${{ matrix.platform }}-app
          asset_content_type: application/octet-stream
